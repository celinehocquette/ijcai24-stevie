pos(countsuccessor_positive_3([-2, 5, -1, 1, 2, 2, 0, -4, -2, -2, -3, 2, 2, 5, 3, -4, 5, 3, 1],15)).
pos(countsuccessor_positive_3([0, 1, -4, 1, -1, 4, 2, 5, -4, -1, -2, 1, 4, -2, 3, -5, -3, -3, 5, 3, -3, 5, -4, 3, 0, 3, -3, -2, -5, 3, -3, -5, -2, -3, 0, -2, 1, 1, -1, 2],23)).
pos(countsuccessor_positive_3([-2, 1, 4, 3, 4, -3, 5, 1, 2, 3],11)).
pos(countsuccessor_positive_3([-1, -1, 0, -1, -3, -5, -3, -5, 0, 0, -1, 3, -4, 2, 1, -3, -1, -5, -4, 2, -2, 0, -5, -4, 3, 4, -5, -1, -1, 0, 5, 1, 1, -5],17)).
pos(countsuccessor_positive_3([0, 2, -1, -4, 3, 5, 4, 5],9)).
pos(countsuccessor_positive_3([-1, 1, 3, 1, 3, 5],8)).
pos(countsuccessor_positive_3([-5, 3, 1, -3],5)).
pos(countsuccessor_positive_3([-3, 5, 4, -2, -4, 0, -2, 0, 0, 1, -3, -1, -5, -5, -4, -4, 5, 3, 5, 0, 5, 0, -2, 1, -2, 0, -3, 4, -1, -5, -5, 2, -3, -2, 0, -4, 4, 5, -2, 4, 0, -2, 0, -2, -5, 3, 3],27)).
pos(countsuccessor_positive_3([-5, -5, -4, -1, 5, 1, 1, 4, 3],8)).
pos(countsuccessor_positive_3([2, -2, -1, -2, 1, 0, 4, 4, 0, 4, 0, 2, 0, -3, 5, -4, -3, 3, 1, -5, -4],16)).
pos(countsuccessor_positive_3([2, -3, -3, 2, 3, 1, -5, -2, -4, 2, -5, 5, 2, 5, -4, -5, 4, 4, 5, 0],15)).
pos(countsuccessor_positive_3([0, 2, 4, -3, -3, 4, 2, -1, 5, 0, -5, -5, 1, 0, -3, 3, 2, 1, -3, 0, 5, 4, 4, 3, 5, -4, 5, -2, 3, 3, 2, -5, 3, 0, 4, -1, -2, 1, 5, 0, -2, 5, 5, 1, -1, 5, 1, 2, -4, 5],38)).
pos(countsuccessor_positive_3([0, -3, 3, 3, 0, 4, 2, -4, 4, -3, -4, -3],10)).
pos(countsuccessor_positive_3([-1, -5, -3, 2, -1, 3, 5, 3, -3, 0, 2, -2, 0, 4, 0, -4, -1, 4, 0, -2, -1, -2, 4, 4, -4, 2, 2, 1, -2, 2, -3],20)).
pos(countsuccessor_positive_3([0, -4, -2, 0, -5, -5, -1, 1, 5, 3, 1, 0, 5, 5, 0, 4, 5, -4, 3, -4, -3, -1, 3, 0, -1, 4, -5, 4, -2, -3, 4, 5, 3, 2, 1, 5, 3, -4, -1, 0, -3, 0, -2, 3, 3, -5, -4, -2, 0],32)).
pos(countsuccessor_positive_3([-5, -5, -4],3)).
pos(countsuccessor_positive_3([-4, 1, 1, -2, -2],5)).
pos(countsuccessor_positive_3([0],4)).
pos(countsuccessor_positive_3([-4, 0, 4, -3, -4, -1, -3, -5, 5, -5, 2],7)).
pos(countsuccessor_positive_3([2, 1, 3, 3, 5],8)).
pos(countsuccessor_positive_3([-2, -5, -3, 5, 1, 3, 3, 3, 3, 1, 3, -1, 4, -1, -1, 0, 3, -3, -3, -3, 0, -2, -5, -5, -5, 5, 3, 0, 1, -3, 1, -1, -5, 0, -5, -5, 3, 2, -4, -3, 1, 0, 1, 0, 1, 5, 4, -4, 5, 3],32)).
pos(countsuccessor_positive_3([3, 0, -3, 5, -3, -3, -3, -4, 0, -4, -2, 0, 3, 0, 5, -2, 4, -1, 2, -5, 4, 2, 0, -4, 5, -4, 3, 1, -4, 2, 3, 2, 4, 1, 4, -4, 5, -4, -3, 0, 1, -2, 5, 1, 2],31)).
pos(countsuccessor_positive_3([-5, -5, -4, -5, 1, -2, 3, 4, 4, -1, 2, -5, 1, 2, 4, -4, 5, -1, 4, -5, -4, 2, 2, 0, -5, -2, -5, -3, 5, -1, 0, 4, -1, 5, 3, -5, -3, -3, -1, -2, 3, -2, 1, 2, -2],24)).
pos(countsuccessor_positive_3([5, 1, -1, 0, 0, 4, -5, -1, -4, 5, -2, 5, 2, 3, 0, -4, -2, -5, 4, 2, 5, 3, -2, -3, 3, 3, 5, -5, 2, -5, -1, -3, -1, -1, 4, 2, 5, 4, -5, -4, 1, 0, -4, 4, 3, -5, 1, 4, -3],31)).
pos(countsuccessor_positive_3([-3, -4, 3, 3, -2, 0, -3, -5, 1, 5],8)).
pos(countsuccessor_positive_3([-5, -2, 1, -4, -2, 0, 1, -3, -4, -5, 2, -3, -4, 0, 1, -1, -4, -2, -2, -1, 5, -5, 3, 0, 0, -5, -3, 2, -5, -4, -1, -1, 3, -1, -4, -4, 2, -5, 1, 0, -5, 0, 1, -2, -3, 3, -2],21)).
pos(countsuccessor_positive_3([-4, 4, 5, -2, 0, -5, -2, -2, -1, -1, 3, 0, -3, -4, -2, 1, -4, -3, 2],10)).
pos(countsuccessor_positive_3([5, 5, 4, -5, 2, 1, 1, 1, 4],11)).
pos(countsuccessor_positive_3([-5, -5, -3, -3, -5, -5, -1, -3, 3, 4, 3, 4, 1, -3, 3, 3, -1, -2, -3, -3, -5, 2, 5, 3, 3, -1, 1, 0, -1, 5, -3],17)).
pos(countsuccessor_positive_3([-4, 4, -2, -1, -4, 2, 5, 0, 3, 1, 3, 3],11)).
pos(countsuccessor_positive_3([-2, 4, 5, 0, 1, -3, -3, 1, 1, -2, -2, 3, -2, 1, 5, -4, -2, 3, -3, 0, 2, 2, 0, 1, -4, -3, -4, -2, 3, -3, -2, 5, 4, 5, -2, -2, -5, 5, 5],24)).
pos(countsuccessor_positive_3([4, -2, 0, -2, 1, 4, -5, 1, -1, 1, 3, 3, 0, 5, -2, 1, 5, -1, -5, -2, -1, 4, 4, 1, 5, 0, -5, 5, 0, -2, -3, -1, 2, -5, 4, -4, 1, -1, -5],25)).
pos(countsuccessor_positive_3([-3],3)).
pos(countsuccessor_positive_3([-1, 0, -4, -2, 2, -1, 2, -3, 3, 3],8)).
pos(countsuccessor_positive_3([-4, 5, 2, -4, -1, 1, 5, 0, 1, -5, -1, 2, 2, 1, -2, 1, 0, -2, -5, 4, 1, 2, 2, -1, 5, 0, -3, 2, 4, 4],23)).
pos(countsuccessor_positive_3([-3, -1, 5, 1, 3, 3, -2, -5, 4, -1, 4, 3, 2, 1, -2, 2, 0, 2, -5, 0, 0, -2, 2, 4, 5, 4],21)).
pos(countsuccessor_positive_3([1, 5, -4, -1, -2, 2, 1, 5, -1, 4, -5, 2, 0, 5, -2, 5, 5, 2, -4, -1, -4, -5, -5],15)).
pos(countsuccessor_positive_3([-2, 3, 4, 5, 1, 5, 0, -5, 2, -1, -2, 5, -4, -4, 0],12)).
pos(countsuccessor_positive_3([-2, -3, -2, 2],4)).
pos(countsuccessor_positive_3([-1, 0, -4, 4, -4, 3, -2, 1, -3, -2, 1, -4, 3, 0, 1, -3, 5, -1, 3, 0, 4, 1, 1, -1, -1, 1, -1, 0, 1, 5, 4, -3, -3, -2, -2, 1, 5, -3, 2, -4, 3, 0],27)).
pos(countsuccessor_positive_3([0, 3, -1, -5, 3, 5, -4, 0, 0, 4, -5, -4, 1, -3, 5, 3, 4, -1, 3, 0, -2, -1, 2, -2, -4, -3, 5, -4, -5, -5, -5, -4, 0, -3, 5, -4, 3, -5, -3, -2, -1, -4, -1, -4, 5, -5, -4],22)).
pos(countsuccessor_positive_3([0, 5, 0, -2, 2, -1, -3, -3, 2, 4, 2, 4, -1, 2, -1, -4, -4, 4, 3, -3, -3, 1],15)).
pos(countsuccessor_positive_3([2, 1, -1],5)).
pos(countsuccessor_positive_3([5, 5, 0, 4, -4, -3, 4, -3, -3, -1, 5, 2, -4, -1, 0, 2, -1, 2, -2, 0, -3, 4, 0],16)).
pos(countsuccessor_positive_3([3, 1, 4, 4, 0, 5, 4, 1, 0, -2, -2, -3, 0, 5, -2, 0, 1, 1, 2, -1, 5, 5, 5, -1, -4],21)).
pos(countsuccessor_positive_3([-3, -1, 4, 1, 4, -1, -5, 4, 4, 0, -3, 0, 4, 2, 1, 4],14)).
pos(countsuccessor_positive_3([-1, -3, -4, 3, 4, 5, 1, -1, -5, -5, 3, 3, 1, -3, -3, -4, -4, -2, 5, -2, 1, 0, -5, 5, -4, -5, -3, 0, -3, 1, -4, -3, -2, -1, 5, -5],17)).
pos(countsuccessor_positive_3([4, -4, 3, 4, 0, -2, -3, 0, 3, 5, 4, -3, -3, 4, -5, 1, -5],13)).
pos(countsuccessor_positive_3([-2, 2, -5, 3, -4, -2, 5, -2, -3, -1, -1, -5, 5, 1, 4, 2, -5, -1, 2, -3],11)).
pos(countsuccessor_positive_3([-5, -2, -5, -4, 4, 3, -4, -4, 2, 2, -2, 5, 3, 4, -1, -1, -5, 0, -3, 2, 3, -2, 3, 5, -5],15)).
neg(countsuccessor_positive_3([2, 4, -2, 1, -4, 0, -1, -1, -1, -1, -4, -3, -1, 1, 3, -3, 4, 1, -4, -1, -3, -4, -2, 4, -4, 0, -3, 4, 2, -4, -1, -5, -4, 2, -3, -4, -4, 0, -3, 1, -5, 3, 5, 3, -2, 5],42)).
neg(countsuccessor_positive_3([4, 1, -5, -5, -2, 5, -2, 5, 2, 2, -5, -3, 1, 3, -5, 2, 1, 5, 5, -5, -4, 4, -1, 3, -5, 4, -3, 3, -1, -5, -1, 3, -4, 2, 5, -5, 1, -3, 2, -1, -4, 1, 5, -3, 4],6)).
neg(countsuccessor_positive_3([-4, -2, -4, 3, 1, -4, -1, -5, 3, 0, -4, 3, -5, -5, -5, 3, 4, 0, -4, -3, 2, -3, 0, 2, 4, 4, 3, 0, -1, -1, -1, -3, 1],3)).
neg(countsuccessor_positive_3([1, 5, 0, -3, 5, 4, -2, -4, 2],7)).
neg(countsuccessor_positive_3([-5, 2, 0, -3, 2, -4, -5, 1, -3, -2, 1, 0, 1, -4, -5, 1, 2, 1, -5, -1, -5, 1, 1, 5, 1, -5, 0, -5, -1],14)).
neg(countsuccessor_positive_3([2, -3, -5, -4, -2, 1, 4, -2, -4, 1, -3, -3, -5, -4, 5, -4, -2, -5, 3, 1, 5, 2, 4, -2, 2, 3, 4, -4, -4, 0, -1, 3, -1, 4],30)).
neg(countsuccessor_positive_3([1, 5, -1, 4, -3, 1, -2, 1, 1, 0, -4, -4, -5, 1, -5, -2, 4, -1, 0, 2, 3, 4, -5, 2, 1, -2, 3, 2, 1, -2, -2, -3, 3, -3, -2, -1, 0, -3, -3, 1, -1, 2, 0, 4],15)).
neg(countsuccessor_positive_3([5, -3, -1, 2, -1, 5, 2, 3, 0, -3, -3, 0, -5, 3, 5, 4, 0, 4, 0, -4, -4, 5, -5, -2, 2, -2, -1, -5, 2, 0, -4, 4, 5],16)).
neg(countsuccessor_positive_3([-3, 1, 0, 3, 0, 5, -4, -4, 1, -3, -1, 5, 1, 5, -2, -1, 0, 5, 5, 4, 4, 1, -4, -3, -1, -4, 1, 1, -4, 3, -4, -3, 0, 3, 1, 3, 5],29)).
neg(countsuccessor_positive_3([4, -3, 4, 2, 4, -2, 5, -5, 3, -5],3)).
neg(countsuccessor_positive_3([5, -2, 3, 2, 0, -3, -3, -2, 2, 1, -3, 2, -4, -4, 5, 3, 1, 5, 1, 0, 2, -3, 2, 4, 2, 1, -2, 1, -2, -1, 0, -2, -2, 4, -4, 3, 3, -1, 3, -2, 3],24)).
neg(countsuccessor_positive_3([5, 0, 4, -3, -4, 3, 5, 2, 0, 2, -3, -2, 2, 1, 2, 5, 3, -1, 3],18)).
neg(countsuccessor_positive_3([3, 0, -2, -5, 0, 0, 1],6)).
neg(countsuccessor_positive_3([2, -3, 2, -2, -2, 3, -5, -3, -3, 3, 2, 1, 3, 3, 5, -2, 2, 0, 5, 0, -5, -5, 0, -4, 4, 5, 1, 4, 4, -5, 4, 0, 4, 1, 1],22)).
neg(countsuccessor_positive_3([3, 2, -5, 0, 5, -4, 5, -2, -4, 1],4)).
neg(countsuccessor_positive_3([0, 3, 4, -4, -3, -3, 2, -3, -2, -4, 0, 5, 2, 1, 1, 0, 0, 2, -1, -5, 3, -4, -3, -5, 1, 2, 2, 4, -3, -2, 1, 5, -5, 1, -2, 0, -1, -4, -5, 2, -1, 3, 0, 4, -3],24)).
neg(countsuccessor_positive_3([-5, -1, -1, -4, 4, -3, -3, -5, -1, -3, -3, -1, 1, -5, 4, 2, 3, 4, -2, -5, -1, 1, 4, 0, 3, 0, -5, -3, 3, -3, -3, -3, 2, -2, 5, -3, -4, -4, 3, -2, 3, -1, -3, -3, 1],34)).
neg(countsuccessor_positive_3([-4, -5, -1, -2],0)).
neg(countsuccessor_positive_3([-1, 4, 1, -4, -2, 1, -1, 4, -5, -3, 0],11)).
neg(countsuccessor_positive_3([0, 1],0)).
neg(countsuccessor_positive_3([-1, 4, -2, 0, -2, 1, -5, -2, 5, 2, 4, -4, 3, 0, -2, -5, -2, -4, -3, 3, -2, 4, 0, 4, -4, -1, -2, 5, 2, 0, 1, 3, 5, -1, 0, 5, -1, -5],17)).
neg(countsuccessor_positive_3([5, -4, 5, 0, 1, -2, 3, 0, -2, 3, -5, 4, -5, -3, -1, 5, -2, 4, -1, -3, 2, -4, 1, -2, 4, 5, -4, 3, -3, 4, 0, -2, 5, -4, 4, -5, 2, 5, 0, 2, -5],17)).
neg(countsuccessor_positive_3([1, 4, 4, -2, -1, 0, 4, -3, -5, 4, 0, -3, 1, 4, 4, 2, 0, -5, -5, -3, 5, 1, 3, -2, 4, 4, 1, 4, -1, 2, 2, 0],22)).
neg(countsuccessor_positive_3([0, 1, -2, -1, 5, 2, -2, -5, -1, -3, -2, 2, 1, -1, -1, 4, -5, 4],7)).
neg(countsuccessor_positive_3([3, 2, -1, 0, 0, 4, -1, 2, -5, -1, 4, -3, 4, 4, 5, -2, -1, -3, -4, 4, 5, -1, 0, 1, 2, 3, -1, 3],28)).
neg(countsuccessor_positive_3([-5, 3, 3, 0, 3, 4, 0, 1, -4, 0, 2, 3, 4, 2, 5, 3, -1, -3, 2],6)).
neg(countsuccessor_positive_3([4, -4, -4, 2, 0, -5, 4, 1, -5, -3, 2, -4, 2, -2, 2, 3, -5, 1, -3, -5],19)).
neg(countsuccessor_positive_3([5, 1, -2, 3, -1, -5, 5, -1, 5, -4, 5, 1, -4, 3, 5, 5, -5],16)).
neg(countsuccessor_positive_3([-3, -5, 4, -2, -2, 4, -2],3)).
neg(countsuccessor_positive_3([-5, 3, -1, -3, 5, -4, 5, -3, -2, 0, -4, -4, 0, -5, 0, 2, -5, 4, 3, 1, 1, 4, -4, -1, 3, -3, 2, 5],16)).
neg(countsuccessor_positive_3([5, -2, 4, -2, -2, -5, -2, -1, 1, 5, 5, -4, 1, 2, 5, -5, -1, -4, 2, 4, -4, 0, 2, 0, 5, -1, 4, -5, -2, -3, -1, -2, 2, 4],22)).
neg(countsuccessor_positive_3([1, -4, 0, -5, 2, -1, 4, -5, 1, 3, 3, -2, -5],12)).
neg(countsuccessor_positive_3([0, -4, 5, 0, 3, 4, 3, 2, -2, 1, -3, 4, -5, 4, 0, -1, -2, 3, -1, 0, 5, -5, 1, 1, 1, -1, 0, -1, 0, -4, 2, 1, 2, 2, 2, 4, 2, -1, -4, -4, 0, -2, 5, 4, -1, -5, 1],0)).
neg(countsuccessor_positive_3([-4, 2, 3, 4, 4, 2, -4, -3, 5, -4, 2, -1, -4, 2, 1, 3, 5, -5, -5, 1],12)).
neg(countsuccessor_positive_3([2, 5, 3, 3, 5, -4, 1, -5, 1, -5, 3, 3, -5, 1, 2, -4, 4, 4, 4, 1, 3, -4, 4, -1, -1, -1, 3, -5, 3, 5, 0, -4, -4, 0, -2, -3, -3, 4],27)).
neg(countsuccessor_positive_3([-3, 5, 3, -5, 0, 2, 0, -5, 2, -5, -1, 4, 5, 4, 2, -2, 4, 0, 2, -1, 4, 1, 2, 4, -2, -3, -5, -5, 3, 4, -2, 2, 4, 5, -2, -3, 3, -5, 3, 5],37)).
neg(countsuccessor_positive_3([0, 3, -1, 0, -5, 4, -4, 1, 2, -4, -3, -1, -5, 2, -3, -3, 5, -3, -3, 3, -5, -5, 3, 1, -2, 0, 3, 4, 4, -5],14)).
neg(countsuccessor_positive_3([4, 1, 0, -2, 5, -3, 0, -5, 1, 0, 5, 2, -4, -3, -3, 5, -2, 4, -1, 0, 1, -2, 0, -4, 3, -4, -2, -4, -3, -1, -2, 4],27)).
neg(countsuccessor_positive_3([5, -4, 3, -3, 3, 5, -1, 2, 1, -3, 5, 1, -4, 0, -2, -4, -5, -2, 0, -1, -3, 4],0)).
neg(countsuccessor_positive_3([-1, -1, 4, 3, 3, -4, 4, 3, 1, -3, -2],0)).
neg(countsuccessor_positive_3([-4, -5, -3, 3, -4, 0, -5, 0, 1, 2, -4, -4, 5, 1, -1, -3, 5, -1, -2, -2, -1, -4, 5, -5, 0, -1, 1, 0, 4, 3, 5, -4, 5, -5, -5, -4, -3, -3, 5, -2, -5, -1, -3, 5, -4, -3, 1, -4, 2, 0],12)).
neg(countsuccessor_positive_3([-5, -2, 4, -5, 4, 3, 3, 5, -2, -5, 2, 0, 0, 2, -3, 5, 3, -1, 4, 3, -5, 0, 2, 2, 4],19)).
neg(countsuccessor_positive_3([-2, -2, 3, -4, 3, -2, 3, 4, -4, 3, -4, -5, 0, 0, -2, -1, 4, 5, 3, 5, 1, -5, 5, -3, -4, -2, -5, 4, -2, -5, -5, 3, 1, 1, -3, -4],6)).
neg(countsuccessor_positive_3([3, 3, -4, -4, 4, -2, 1, -5, -2, -1, 0, -5, 2, 1, 3, 4, -4, 0, -4, -1, -2, -3, 2, -4, 0, 3, -2, -3, -4, -2, 1, -5, 2, 0, 0, 4, 2, 3, -4, -5, -4, -3, 0, -4, -5, -4, -5, -2, -4, 3, -2],50)).
neg(countsuccessor_positive_3([4, 1, -3, 4, -2, 5, 3, -3, -5, 1, 1, -5, 4, 2, 1, 5, -4, 2, -5, -4],7)).
neg(countsuccessor_positive_3([-3, -2, -5, -4, 1, -1, 3, -5, -5, -3, 2, -4, -3, 3, -3],5)).
neg(countsuccessor_positive_3([-2, -5, -5, 2, 1, -2, -4, 5, 5],3)).
neg(countsuccessor_positive_3([0, -1, 1, -4, -5, -3, -5, 2, 3, 0, -2, -3, -5, 5, 1, 5, -1, -1, -5, 2, 3, 3, 0, -4, -1, -5, -2, 0, 0, 5, -2, 1, 5],21)).
neg(countsuccessor_positive_3([-4, 0, 3, 2, 4, 2, 3, -5, -4, -1, -2, -4, -2, 1, 4, 2, 3, -2, 5, -4, 5, 3, -5, -4, 5, -3, -4, 5, 0, -1, 5, -2, 4, 1, 1, -3, 1, -5, 5, 2],40)).
neg(countsuccessor_positive_3([-5, 5, 4, -1, -5, 5, 2, -2],1)).
